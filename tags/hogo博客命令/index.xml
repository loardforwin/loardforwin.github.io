<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hogo博客命令 on Loardforwin&#39;s Technology Blog</title>
    <link>https://loardforwin.github.io/tags/hogo%E5%8D%9A%E5%AE%A2%E5%91%BD%E4%BB%A4/</link>
    <description>Recent content in hogo博客命令 on Loardforwin&#39;s Technology Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 30 Jul 2020 15:09:03 +0800</lastBuildDate>
    
        <atom:link href="https://loardforwin.github.io/tags/hogo%E5%8D%9A%E5%AE%A2%E5%91%BD%E4%BB%A4/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>实例化bean的三种方式</title>
      <link>https://loardforwin.github.io/2020/10/%E5%AE%9E%E4%BE%8B%E5%8C%96bean%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Tue, 13 Oct 2020 22:20:40 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/10/%E5%AE%9E%E4%BE%8B%E5%8C%96bean%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
      <description>实例化bean的三种方式 方式1: Spring 使用默认无参构造函数(掌握) 在默认情况下, Spring会根据默认无参构造函数来创建类对象。如果 bean 中没有默认</description>
    </item>
    
    <item>
      <title>Idea中连接mysql报错</title>
      <link>https://loardforwin.github.io/2020/09/idea%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99/</link>
      <pubDate>Tue, 29 Sep 2020 16:37:12 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/09/idea%E8%BF%9E%E6%8E%A5mysql%E6%8A%A5%E9%94%99/</guid>
      <description>idae中连接mysql报错的解决方法 报错内容 Server returns invalid timezone. Need to set &amp;lsquo;serverTimezone&amp;rsquo; property. 解决方法 将连接界面的Advanced里的serverTimezone栏的va</description>
    </item>
    
    <item>
      <title>提交表单不能和事件绑定一起触发的问题</title>
      <link>https://loardforwin.github.io/2020/09/%E6%8F%90%E4%BA%A4%E8%A1%A8%E5%8D%95%E4%B8%8D%E8%83%BD%E5%92%8C%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A%E4%B8%80%E8%B5%B7%E8%A7%A6%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 24 Sep 2020 18:00:13 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/09/%E6%8F%90%E4%BA%A4%E8%A1%A8%E5%8D%95%E4%B8%8D%E8%83%BD%E5%92%8C%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A%E4%B8%80%E8%B5%B7%E8%A7%A6%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>问题的原因:事件绑定的函数名不能是submit等关键字。</description>
    </item>
    
    <item>
      <title>ResourceBundle读取properties类</title>
      <link>https://loardforwin.github.io/2020/09/resourcebundle%E8%AF%BB%E5%8F%96properties%E7%B1%BB/</link>
      <pubDate>Thu, 03 Sep 2020 15:49:24 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/09/resourcebundle%E8%AF%BB%E5%8F%96properties%E7%B1%BB/</guid>
      <description>java.util.ResourceBundle类 public class ResourceBundleDemo { public static void main(String[] args) { ResourceBundle bundle = ResourceBundle.getBundle(&amp;quot;p</description>
    </item>
    
    <item>
      <title>Mybatis_dynamic</title>
      <link>https://loardforwin.github.io/2020/08/mybatis_dynamic/</link>
      <pubDate>Thu, 20 Aug 2020 15:21:41 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/mybatis_dynamic/</guid>
      <description>批量删除，参数是数组 &amp;lt;!-- 批量删除，参数是数组 --&amp;gt; &amp;lt;delete id=&amp;quot;deleteUserByArray&amp;quot; parameterType=&amp;quot;int[]&amp;quot;&amp;gt; delete from user where id in &amp;lt;foreach collection=&amp;quot;array&amp;quot; open=&amp;quot;(&amp;quot; close=&amp;quot;)&amp;quot; separator=&amp;quot;,&amp;quot; item=&amp;quot;id&amp;quot;&amp;gt; #{id} &amp;lt;/foreach&amp;gt; &amp;lt;/delete&amp;gt; 批量删除，参数是集合 &amp;lt;!-- 批量删除，参数是集合 迭代标签 foreach 标签中的</description>
    </item>
    
    <item>
      <title>MyBatis一级，二级缓存</title>
      <link>https://loardforwin.github.io/2020/08/mybatis%E4%B8%80%E7%BA%A7%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98/</link>
      <pubDate>Tue, 18 Aug 2020 12:09:21 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/mybatis%E4%B8%80%E7%BA%A7%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98/</guid>
      <description>MyBatis一级缓存 同一个SqlSession对象，执行的SQL语句相同，启用一级缓存，第一次查询结果(保存),再次查询，使用原来的结果 M</description>
    </item>
    
    <item>
      <title>Jar包的使用范围</title>
      <link>https://loardforwin.github.io/2020/08/jar%E5%8C%85%E7%9A%84%E4%BD%BF%E7%94%A8%E8%8C%83%E5%9B%B4/</link>
      <pubDate>Thu, 13 Aug 2020 23:05:12 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/jar%E5%8C%85%E7%9A%84%E4%BD%BF%E7%94%A8%E8%8C%83%E5%9B%B4/</guid>
      <description>c3p0-0.9.1.2.jar 用于数据库连接池 druid-1.1.6.jar 用于数据库连接池 lombok-1.18.8.jar 用于pojo对象的简化开发 mysql-connector-java-5.1.46.jar 用于数据库连接 commons-beanutils.jar 包含了一些Bean工具类,如BeanUtils commons-logging.jar 包含了日志</description>
    </item>
    
    <item>
      <title>一般分页数据的pojo对象内容</title>
      <link>https://loardforwin.github.io/2020/08/%E4%B8%80%E8%88%AC%E5%88%86%E9%A1%B5%E6%95%B0%E6%8D%AE%E7%9A%84pojo%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AE%B9/</link>
      <pubDate>Thu, 13 Aug 2020 23:01:06 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/%E4%B8%80%E8%88%AC%E5%88%86%E9%A1%B5%E6%95%B0%E6%8D%AE%E7%9A%84pojo%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AE%B9/</guid>
      <description>一般分页数据的pojo对象内容 public class PageBean&amp;lt;T&amp;gt; { //总共页数 private int totalPage; //当前的第几页 private int currentPage; //每页显示的条数 private int pageSize; //总数据 private long totalCount; //查询当前页面的所有</description>
    </item>
    
    <item>
      <title>关于Jsp页面标签的小用法</title>
      <link>https://loardforwin.github.io/2020/08/%E5%85%B3%E4%BA%8Ejsp%E9%A1%B5%E9%9D%A2%E6%A0%87%E7%AD%BE%E7%9A%84%E5%B0%8F%E7%94%A8%E6%B3%95/</link>
      <pubDate>Thu, 13 Aug 2020 22:50:10 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/%E5%85%B3%E4%BA%8Ejsp%E9%A1%B5%E9%9D%A2%E6%A0%87%E7%AD%BE%E7%9A%84%E5%B0%8F%E7%94%A8%E6%B3%95/</guid>
      <description>获取客户端超链接的参数 在href=&amp;quot; &amp;quot;内容最后面加？operator=xxx 同过servlet里的request.get</description>
    </item>
    
    <item>
      <title>中文乱码问题</title>
      <link>https://loardforwin.github.io/2020/08/%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 10 Aug 2020 23:58:11 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</guid>
      <description>Request,response对象中文乱码问题 response.setContentType(&amp;quot;text/html;charset=UTF-8&amp;quot;); request.setCharacterEncoding(&amp;quot;utf-8&amp;quot;); 数据库出现中文乱码的解决方案 ALTER TABLE 【表名】CONVERT TO CHARACTER SET utf8 COLLATE utf8_unicode_ci; 解决数据库连接出现中文</description>
    </item>
    
    <item>
      <title>IDEA中LomBok无法使用的解决方案</title>
      <link>https://loardforwin.github.io/2020/08/idea%E4%B8%ADlombok%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Mon, 10 Aug 2020 11:06:16 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/idea%E4%B8%ADlombok%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>Settings-&amp;gt;Build、Execution、Deployment-&amp;gt;Annotation Processors-&amp;gt;Enable annotation processing✔</description>
    </item>
    
    <item>
      <title>关于空格宽度和汉字宽度不匹配问题的解决方案</title>
      <link>https://loardforwin.github.io/2020/08/%E5%85%B3%E4%BA%8E%E7%A9%BA%E6%A0%BC%E5%AE%BD%E5%BA%A6%E5%92%8C%E6%B1%89%E5%AD%97%E5%AE%BD%E5%BA%A6%E4%B8%8D%E5%8C%B9%E9%85%8D%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 07 Aug 2020 23:25:26 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/%E5%85%B3%E4%BA%8E%E7%A9%BA%E6%A0%BC%E5%AE%BD%E5%BA%A6%E5%92%8C%E6%B1%89%E5%AD%97%E5%AE%BD%E5%BA%A6%E4%B8%8D%E5%8C%B9%E9%85%8D%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>名称 编号 描述 &amp;amp;nbsp; &amp;amp;#160; 不断行的空白(1个字符宽度) &amp;amp;ensp; &amp;amp;#8194; 半个空白(1个字符宽度) &amp;amp;emsp; &amp;amp;#8195; 一个空白(2个字符宽度) &amp;amp;thinsp; &amp;amp;#8201; 窄空白(小于1个字符宽度) 经过实践操</description>
    </item>
    
    <item>
      <title>IDEA快捷键</title>
      <link>https://loardforwin.github.io/2020/08/idea%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Fri, 07 Aug 2020 18:48:21 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/idea%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>ALT+7：快速查看类中所有方法</description>
    </item>
    
    <item>
      <title>名词记录</title>
      <link>https://loardforwin.github.io/2020/08/%E7%9B%B8%E5%85%B3%E5%90%8D%E8%AF%8D%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Fri, 07 Aug 2020 09:54:32 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/%E7%9B%B8%E5%85%B3%E5%90%8D%E8%AF%8D%E8%AE%B0%E5%BD%95/</guid>
      <description>web：World wide web 互联网总称 JSTL(Jsp Standard Tag Library)：JSP标准库 使用时jsp页面头部的申明 &amp;lt;%@ taglib uri=&amp;quot;地址（一般是核心库co</description>
    </item>
    
    <item>
      <title>JDBC随笔</title>
      <link>https://loardforwin.github.io/2020/08/jdbc%E9%9A%8F%E7%AC%94/</link>
      <pubDate>Wed, 05 Aug 2020 09:36:26 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/jdbc%E9%9A%8F%E7%AC%94/</guid>
      <description>随笔 连接池本质是容器集合，用就拿，用完归还到池中 三种连接池：DBCP(Apache的产品，快被抛弃了，不用),C3P0,Druid(阿里巴巴</description>
    </item>
    
    <item>
      <title>多表查询</title>
      <link>https://loardforwin.github.io/2020/08/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Tue, 04 Aug 2020 15:43:09 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/</guid>
      <description>多表查询新建数据库数据 /* 多表查询 新建的数据库 */ # 分类表 CREATE TABLE category ( cid VARCHAR(32) PRIMARY KEY , cname VARCHAR(50) ); #商品表 CREATE TABLE products( pid VARCHAR(32) PRIMARY KEY , pname VARCHAR(50), price INT, flag VARCHAR(2), #是否上架标记为：1表示上</description>
    </item>
    
    <item>
      <title>表的关系</title>
      <link>https://loardforwin.github.io/2020/08/%E8%A1%A8%E7%9A%84%E5%85%B3%E7%B3%BB/</link>
      <pubDate>Tue, 04 Aug 2020 14:01:03 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/%E8%A1%A8%E7%9A%84%E5%85%B3%E7%B3%BB/</guid>
      <description>1.创建主外键关系 /* 创建主外键关系 */ create table category( cid int primary key auto_increment, cname varchar(32) ); #商品表 create table product( pid int primary key auto_increment, pname varchar(32), price int, category_id int ); /* 创建外键约束,外键约束外键约束，顾名思义就</description>
    </item>
    
    <item>
      <title>MySQL基础语法</title>
      <link>https://loardforwin.github.io/2020/08/mysql%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 03 Aug 2020 18:13:21 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/mysql%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</guid>
      <description>1.创建表(create) /* 创建数据表: 关键字 create table 格式: create table 表名( 列名1 数据类型[长度] [约束], 列名2 数据类型[长度] [约束], 列名3 数据</description>
    </item>
    
    <item>
      <title>MySQL数据库和Navicat快捷语法</title>
      <link>https://loardforwin.github.io/2020/08/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8Cnavicat%E5%BF%AB%E6%8D%B7%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 03 Aug 2020 10:33:40 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8Cnavicat%E5%BF%AB%E6%8D%B7%E8%AF%AD%E6%B3%95/</guid>
      <description>注意：[]表示内容可变 MySQL数据库相关命令 所有命令需要加分号（ ；） 创建数据库： create database [数据库名]; 删除数据库： drop database [数据库名]; 设置已存在</description>
    </item>
    
    <item>
      <title>类的加载器ClassLoader</title>
      <link>https://loardforwin.github.io/2020/08/%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%99%A8-classloader/</link>
      <pubDate>Sat, 01 Aug 2020 20:37:31 +0800</pubDate>
      
      <guid>https://loardforwin.github.io/2020/08/%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%99%A8-classloader/</guid>
      <description>类的加载器 ClassLoader ——————运行class，加载到内存，方法区 加载器用IO流对象将class文件加载到内存 三个加载器都是CLassLoader的</description>
    </item>
    
  </channel>
</rss>
